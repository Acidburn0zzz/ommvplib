apply plugin: 'com.android.library'

def versionMajor = 0
def versionMinor = 0
def versionPatch = 10
def myVersionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
def myVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"

//noinspection GroovyMissingReturnStatement
android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode myVersionCode
        versionName myVersionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
// Needed until this is fixed:
// https://code.google.com/p/android/issues/detail?id=224272
android.libraryVariants.all {
    def aptOutputDir = new File(buildDir, "generated/source/apt/${it.unitTestVariant.dirName}")
    it.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
}
dependencies {
    compile "com.android.support:support-annotations:${supportVersion}"
    compile "com.android.support:appcompat-v7:${supportVersion}"
    compile "com.android.support:preference-v7:${supportVersion}"

    compile "com.google.dagger:dagger:${daggerVersion}"
    compile "com.google.dagger:dagger-android:${daggerVersion}"
    compile "com.google.dagger:dagger-android-support:${daggerVersion}"

    annotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    annotationProcessor "com.google.dagger:dagger-android-processor:${daggerVersion}"
}

def credentialsFile = new File(System.properties['user.home'], ".bintray/bintray.properties")
ext {
    if (credentialsFile.canRead()) {
        def Properties props = new Properties()
        props.load(new FileInputStream(credentialsFile))
        bintrayUser = props['bintray.user']
        bintrayApiKey = props['bintray.apikey']
    }

    bintrayRepo = 'maven'
    bintrayName = 'ommvplib'

    publishedGroupId = 'eu.darken.ommvplib'
    libraryName = 'One More MVP Lib'
    artifact = 'library'

    libraryDescription = 'One More MVP Lib'

    siteUrl = 'https://github.com/d4rken/ommvplib'
    gitUrl = 'https://github.com/d4rken/ommvplib.git'

    libraryVersion = myVersionName

    developerId = 'darken'
    developerName = 'Matthias Urhahn'
    developerEmail = 'darken@darken.eu'

    licenseName = 'MIT'
    licenseUrl = 'https://github.com/d4rken/ommvplib/blob/master/LICENSE'
    allLicenses = ["MIT"]
}
if (credentialsFile.canRead()) {
    apply from: '../publish-to-bintray.gradle'
}